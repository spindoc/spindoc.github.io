
[




    
    {
        "title": "Pyramidy, tarot, tretie oko",
        "content": "Pyramídy a ich bod g je na spodnej strany pyramidy (uhlopriecka). Tam je\ncentrum z ktoreho vychadza terapeutický potenciál. Pyramidy su kultové\nstavby z obdobia prechodu šamanskej kultúry do náboženskej. Pod bod g sa\ndajú dať fyzické objekty alebo mentálne predstavy objektov na, ktoré som\nsa napojil cez magnetické polia (láskavosťou, nepovyšovaním).\n\nAko pyramídy pôsobia?\n\n\nZlepšujú predstavivosť a vizualizáciu (dobré na programovanie)\nNastavia neuróny tak aby som ich mohol lepšie donucovať k určitej (spolu\ns meteoritmy a tarotovýmm kartami). Pyramidalny tvar lepšie zasiahne do\nneurónov\nRozvoj vešteckej intuície (spolu s tarotom, kyvadlom) a tretieho oka\nVyžitie do reiki systému na liečbu energetickú a odblokovanie\nembryonalnych neuronov.\nCelkove dobre ovplyvňujú neuróny moje aj neuróny\n\n\nK čomu je to dobré?\n\nPomocou pyramíd môžem svoje neuróny lepšie cepovať a prinútiť ich tak aby\nrobili to, čo od nich žiadam. Aby sa neprasadilo zvieracie vedomie, ktoré\nchce len pominuteľné veci, ktoré sú nezmyselné a vôbec mi nepomáhajú. \n\nDonucovať neuróny aby som sa staral pravidelne o svoje zdravie, robil\npsychoterapie, bol disciplinovanejší. Takisto pyramídy ako kultové objekty\nmi pomahájú posilňovať svoju ľudskosť (šamanské vedomie). \n\nKombinácie\n\nPyramídy sa dajú kombinovať s tarotovými kartami (Crowley a Marseile). Tie\npoukladám do vnútra pyramíd naukladanýčh na seba. Snažím sa na ne napojiť\na tak s nimi meditovať a zároveň sa napájať na ďalšie pyramídy. Neustale\ntie pyramidy v predstavách hromadiť a tie predstavy tlačiť do vnútra  do\nfyzického tela. Môžem do vnútra pyramíd dať meteorit alebo aspoň jeho\nobrázok a celé to skombinovať.\n\n\n\nNesmiem sa na to hrať, ale brať to seriózne za účelom budovať si automaty\n\n\n\nAby to celé fungovalo tak musím byť napojený na 10-15 pyramíd aby sa tá\nsila násobila, lebo samotné pyramídy su slabé. Okrem toho sa treba\nsústrediť na bod g. Treba mať naraz priestorovú predstavu 5-10 pyramíd v\nhlave to dobre fungovalo. Je jedno či mám pyramídu pred sebou alebo je to\nmentálna pyramída. Vždy sa musím koncentrovať na bod g aby som z toho\nvyťažil, čo najviac.\n\n Prax\n\nNa začiatok je dobré naladiť sa pozitívne, lebo to vyvolá\nľahký hypnotický stav, ktorý zlepší prienik do vnútra. Nastaviť sa\npozitívne, že idem robiť teraz niečo pre seba, svoje zdravie, intelekt,\nstabilizovať psychiku. \n\nK tomu treba pridať úctu k týmto technikám, úctu k\ntým, čo tieto techniky vymysleli. Treba mať v sebe vnútornú modlitebňu a\ntak získať tieto sily na svoju stranu. Pomáha to urýchliť vývoj v tejto\noblasti a vlastne v hociktorej inej.\n\nNepovyšovať sa nad tieto techniky ani objekty ako stromy, pyramidy, tarot\natď. Ide o kolektívne prepojenie s týmito objektami a zároveň systémami.\n\nPotom klasika sugeracia poškodených zmyslov, vonkajší svet neexistuje a\nnekompromisne sa presadíť do svojho vnútra. Dať zvieracím neurónom najavo\nkto je tu pánom. \n\nĎalej navodiť si sugeráciu, že som v egypte, cítim tam prach a teplo z\nokolia. Základ je sústrediť sa na bod g a mať v predstavách nahodenýčh\n10-15 pyramíd. Napájať na pyramídy sa môžem aj cez mikropohyb tak ako keby\nsom sa chcel v nich hybať, pohybovať.\n\nLiečit sa môžem tak, že predstavy pyramíd aj s tarotovými kartami tlačím\ndo vnútra do orgánov a nechám prechádzať energie cez ne. Musím sa\nnapojiť aj na mladé samice, ktoré majú veľa energie. Okrem samíc sa môžem\nnapojiť aj na stromy a to tlačit do bodu g pyramidy. Stromy a samice musia\nsú moji bratia a sesty. Keď sa nepovyšujem nad nimi tak sa môžem s nimi\nlepšie prepojiť. To je základ.\n\n\nAby som tento systém dostal do vnútra (do neurónov) tak musím naakumulovať predstavy\npyramíd a meteoritov v hlave a preniesť do fyzického tela.\nAkumuláciou takýchto predstáv do neurónov a tela dokážem zvieracie\nneuróny dobre skrotiť\n\n\nPoužívať pyramídy treba tak, že do vnútra g bodu premiestňujem obrazky\nmeteoritov a tarotovýčh kariet. Tarotové karty sú výborné na dynamizáciu\ncelého pyramidálneho systému. Treba využívať Crowleyho tarot a marseille\ntarot. Tarotové karty vo vnútri pyramídy ako keby ožili a pomáhaju pri\nvýkone vešteckom alebo energetickom. Celý tento systém je veľmi dobrý pre\nzákladné veštecké naladenie. \n\nFenomén tretieho oka dokážu tieto veštecké techniky rozvíjať, čo má výhodu\nv tom, že automaticky si vybudujem lepšiu intuíciu. Rozvinute tretie oko\nmajú ľudia s dobrou intuíciou. Tretie oko je na koži v čele a v epifýze.\nMôžem ho zobudiť aj psychickým tlakom, keď sa budem koncentrovať do tej\noblasti. Celkovo je tretie okolo zakrpatený orgán s kmeňovými bunkami,\nktore sa dá otvorít tlakom na oblasť epifýzi.\n\nTarotové karty treba neustále pozerať a podvedome vnímať. Postupne sa ich\núčinok dostaví.\n\nPyramídami ako kultovými stavbami sa môžem lepšie prepájať na objekty mimo\nmňa, ale aj na tie pri mne. Treba si uvedomiť, že pyramída je kultová\nstavba a pôsobí na to aby ma lepšie naladila na:\n\n\nVeštecké výkony\nPrepájanie s objektami (mimo mňa aj vo mne - orgány)\nOvplyvnenie zvieracích neurónov k určiteje činnosti.\n\n\nReiki\n\nSystém reiki a pyramídy môžem prepojiť najmä tým, že použijem pyramídy,\ntarot a metority na ovplyvnenie neurónov k tomu aby sa blokovali neurónoy\n5, 10, 15 a otvárali embryonálne. Okrem toho predstavy embryí dokážu zobudíť\nembryonálne neuróny. Okrem toho môžem využiť energie samíc a\nstromov a pritiahnuť ich cez pyramidálny bod g do vnútra svojho tela, teda\ndo orgánov. Všétko to pospájat:\n\n\npyramídy\ntarot \nmeteority \nbod g\nenergie samic a stromov \nblok 5,10,15 neuronov\nliecenie organov cez bod g\n\n\n\n\nAkumulácia týchto objekt do seba (fyzického tela) je základ liečby a\npsychického ovplyvňnovania neurónov aj vešteckého potenciálu.\nMusím sa nekompromisne presadiť. Ja som vlastník svojho vnútra. Ja\ndávam najavo kto tu je pánom. Zviera je slabé a chce ma presvedčiť, že je\nsilné\nMusím sa naučiť mať rád bolesť a prijímať ju bez negatívneho\nhodnotenia. Pomôže mi lepšie vstúpiť do svojho vnútra. Je to\npraveká duchovná cesta\n\n\n",
        "link": "/ezoterika/2015/03/31/Pyramidy_a_Tarot.html",
        "date": "2015-03-31 00:00:00 +0200",
        "excerpt": "",
        "seach_omit": ""
    }
    
    

    
    ,{
        "title": "Donucovanie zvieraciny a sila vôle",
        "content": "Pred každou meditatáciou sa treba pozitívne naladiť, lebo idem robiť niečo\ndobre pre seba, svoje telo, intelekt a zdravie. Musím mať v úcte každú\ntechniku, ktorú cvičím aby som celý systém do seba lepšie prijal.\n\nPotom si treba nasugerovať, že už nemôžem vnímať vonkajší svet, nemôžem\nvidieť, ani počuť, vnímať vonkajší svet hmatom. Vstupujem do vnútra ako\nkeby som tam chcel niečo premýšlať, napríklad o chorobnom stave orgánov\n(mozgu, pľúc, srdca). Nasugerovať si, že som chorý a kvôli tomu nemôžem\nvnímať vonkajši svet.\n\nKedže som stratil zmysli a nevidím musím sa dotknúť svojho tela napr.\nhlavy a ten dotyk by mal vyvolať vyhodenie obrazov o danom orgáne v tej\noblasti. Dotknem sa časti tela a k nej musím priradiť obrázok. Je to\nsčasti aj veštecká technika. Keď sa dotknem týchto oblastí tak je dobré\nspôsobiť si bolesť v tej oblasti.\n\n\n\nDo orgánov musím vždy  prenikať cez nervové dráhy a vždy sa musím\npresadiť na úkor zvieraciny. Nenechať sa ovládať tupou zvieracinou.\n\n\n\n\nMusím si uvedomiť či beriem ezoteriku ako hru alebo si chcem vážne\nbudovať automaty v mozgu.\nKeď si uvedomím, čo môžem stratiť tak musím brať ezoteriku vážne. Inak\nsi nikdy nevybudujem automaty.\nSilu vôle si vypestujem tak, že ovládnem zvieracinu.\n\n\nĎalšia účinná technika ako vstúpiť do svojho vnútra je navodenie bolesti.\nCez bolesť automaticky prenikám do vnútra, teda do nervového systému.\nNa bolesť si musím zvyknút a naučiť sa ju mať rád. Donútiť svoje neuróny\naby pri každom donucovaní a bolesti tvorili látky blaženosti a ja si tak\nzvyknem na bolesť a nebude mi robiť problémy.\n\nPosilovanie šamnského a pravekého vedomie posiluje moje ľudské správanie a\noslabuje zvieracie. Pestovanie šamanskýčh a pravekých techník nesmiem\npodceniť.\n\nJoga je základ pravekých a vlastne všetkýčh ezoterických techník. Človek\nsa pri joge kocentruje do vnútra a vonkajší svet pre neho prestal\nexistovať. Výborný je pocit, že sedím v jaskyni. Pestovať praveké vedomie je\nnajdynamickejšia cesta na ovladnútie zvieraciny. Pravek zviedol najťahší\nsúboj zo zvieracinou. Sugeracia, že som ochorel, nemôžem vnímať vonkajší\nsvet, premýšlam iba o svojom tele, zdravotnom stave. Vonkajší svet ma\nabsolutne prestal zaujímať.\n\n\n\nTlak na zvieracinu musí byť neustály. Musím sa presadiť jednoznačne a\nrazantne bez kompromisou a dobroty. Ja idem robiť teraz toto a hotovo. \nMusím prinútiť zviera aby spolupracovalo. Rob to, čo ti kážem a zavri\npapulu. Bez kompromisov.\n\n\n\nMusím si uvedomiť, že starnutie je autodeštruktívny proces a\nzvieracina ma núti aby som sa zdraviu nevenoval. Musím vyvinúť na\nzvieracinu silný tlak a nedať sa ňou oklamať\n\nZviera sa vždy snaží ma klamať a podvádzať aby si presadilo svoje\nnezmyselné a pominuteľné zvieracie ciele. Musím ho stále kontrolovať a\nvyvíjať na neho tlak aby si nedovolilo robiť to, čo sa mu zachce ako\nufnukané decko. \n\n\n\nZviera je genetický stroj, ktorý je naprogramovaný na to aby som\nukončil svoju existenciu, čo najrýchlejšie. Chce si len dočasne presadiť\nsvoje a hotovo. Musím ho dostať pod kontrolu za každú cenu.\n\n\n\n\n",
        "link": "/ezoterika/2015/03/31/Donucovanie_zvieraciny_a_sila_v%C3%B4le.html",
        "date": "2015-03-31 00:00:00 +0200",
        "excerpt": "",
        "seach_omit": ""
    }
    
    

    
    ,{
        "title": "Testovanie",
        "content": "Tak zvany Toto je citacia kde sa pouzil iba jeden znak na rozdiel od carpetu.\nAutomaticky mi to generuje ako &lt;code&gt; object\n\nnovy\n\n\njeden krat a teraz druhy\ndva a jeden su tri a co dalej\ntri oriesky pre popolusku\njeden jeden krat a teraz druhy\njeden jeden krat a teraz druhy\njeden jeden krat a teraz druhy\n\n\nYesterday, the autobiographical post I wrote for The\nSetup went live. I wrote that post\nover a year ago and then entered into an epic battle with\n@waferbaby about the length of my &quot;Who are\nyou, and what do you do?&quot; section. He said it was too long. I said it could\nnot be . And so the post sat for a \n\n\n\nČo sa stane ak  toto bude ruzove? Aj s line breakom cez &lt;br/&gt; mi\nberia html object - no VYBORNE !!!\n\n\n\nrequire &#39;redcarpet&#39;\nmarkdown = Redcarpet.new(&quot;Hello World!&quot;)\nputs markdown.to_html\n\n\nbolog\n\nreturn now iand text int\n\n\nblog\n\ntoto fungueje teiz\nalert(&#39;hello&#39;);\nreturn now iand text int\n\n\nbold italic \nAbout a month ago I decided that it was foolish to let the words I had written rot on my hard d\nrive and so I did the only thing I knew how to do: overreact. So I cut the original nine-hundre\nd words of my bio down to fourteen words and resubmitted it to Daniel. Those are the words you see in the post now.\n\n$ git clone git://github.com/hugomaiavieira/pygments-style-github.git\n\n$ cd pygments-style-github/\n\n$ (sudo) python setup.py install\n\n$ pygmentize -S github -f html &gt; syntax.css\n\n\n\n\n\\ + q = insert mode ulozi a vypne buffer\n\n\n\n\nnejaky text tak ako ma byt\n\n\nniecoc\n\n$ grep -Ril &#39;markdown&#39; \n\n\n$ pwd home/majo\n\nnieco\n\n$ npm i -g gulp\n\n\n\n\n| First Header  | Second Header |\n| ------------- | ------------- |\n| Content Cell  | Content Cell  |\n| Content Cell  | Content Cell  |\n\nreturn\n\nreturn &quot;Hello!&quot;;\ndef(i):\n    for i in range(0,5):\n        print(i)\n\nretur\n\nreturn &quot;Hello!&quot;;\n\nPosts handled in a special way by Jekyll. The date you specify in the filename is used to \nconstruct the URL in the generated site. This post, for instance, ends up at\nhttp://tom.preston-werner.com/2008/11/17/blogging-like-a-hacker.html.\n\nFiles that do not reside in directories prefixed with an underscore are mirrored into a corresp\nonding directory structure in the generated site. If a file does not have a YAML preface, it is\nnot run through the Liquid interpreter. Binary files are copied over unmodified.\n\n$ jekyll /path/to/raw/site /path/to/place/generated/site\n\n$ jekyll /path/to/raw/site /path/to/place/generated/site\n\nnejakye text\n\nNovy titul\n\nnejaky text\n\n$ jekyll /path/to/raw/site /path/to/place/generated/site\n\n\ndalsi text\n\n# Public: Duplicate some text an abitrary number of times.\n#\n# text  - The String to be duplicated.\n# count - The Integer number of times to duplicate the text.\n#\n# Examples\n#\n#   multiplex(&#39;Tom&#39;, 4)\n#   # =&gt; &#39;TomTomTomTom&#39;\n#\n# Returns the duplicated String.\ndef multiplex(text, count)\n    text * count\n    return(text)\nprint(count)\n\nHele dalsi kod\n\nklass = Class.new\n\nTakze tu je python doplnovanie\n\n@require\nfor i in range(0,5):\n    l = []\n    l.append(i)\n\n# comment\nclass something\nprint(i)\n\ndef multiple(text, count)\n    text * count\n    return(text)\nprint(count)\n\n\n# tak tu mame R-kovy kod\nlibrary(ggplot2)\n\ncentre &lt;- function(x, type, ...) {\n  switch(type,\n         mean = mean(x),\n         median = median(x),\n         trimmed = mean(x, trim = .1))\n}\n\nmyVar1\nmyVar.2\ndata$x\nfoo &quot;bar&quot; baz\n# test &quot;test&quot;\n&quot;test # test&quot;\n\n(123) (1) (10) (0.1) (.2) (1e-7)\n(1.2e+7) (2e) (3e+10) (0x0) (0xa)\n(0xabcdef1234567890) (123L) (1L)\n(0x10L) (10000000L) (1e6L) (1.1L)\n(1e-3L) (4123.381E-10i)\n(3.) (3.E10) # BUG: .E10 should be part of number\n\nclean &lt;- data.frame(old = c(&quot;[()-,]&quot;,&quot;std&quot;,&quot;BodyBody&quot;,&quot;mean&quot;), new =\nc(&quot;&quot;,&quot;Std&quot;, &quot;Body&quot;,&quot;Mean&quot;))\n# clean the features labels through lapply with gsub conditions - change\n# old variables for new variables\ng &lt;- lapply(1:4, function(x) features[, label := gsub(clean$old[x],\nclean$new[x], label)])\n# change train_test colnames as sucject, activity and features label names\nsetnames(train_test, c(&quot;subject&quot;, &quot;activity&quot;, features$label))\nlibrary(data.table)\n# create data table for merging propdmgexp\nprop_token &lt;- data.table(propdmgexp = c(&quot;K&quot;, &quot;M&quot;, &quot;B&quot;), dollars =\nas.numeric(c(&quot;1000&quot;, &quot;10e5&quot;, &quot;10e8&quot;)))\n\n# merge and convert propdmgexp tokens into dollars\nprop_merge &lt;- merge(prop_token, data, by = &quot;propdmgexp&quot;)\n\nprop_merge\n## Change if you want other options\nrequire(&quot;knitr&quot;)\nopts_chunk$set(fig.width=5, fig.height=5, cache=TRUE)\n\n## Load knitcitations with a clean bibliography\nlibrary(knitcitations)\ncleanbib()\ncite_options(tooltip=TRUE)\n\n## I made my own citing function since citep() doesn&#39;t work like I want to with\n## urls that are not really pages themselves like part of a GitHub repo.\nmycitep &lt;- function(x, short=NULL, year=substr(date(), 21, 24), tooltip=TRUE) {\nres &lt;- tmp &lt;- citep(x)\nif(!is.null(short)) {\nres &lt;- gsub(&quot;&gt;&lt;/a&gt;&quot;, paste0(&quot;&gt;&quot;, short, &quot;&lt;/a&gt;&quot;), tmp)\n}\nif(tooltip) {\nres &lt;- gsub(&quot;\\\\?\\\\?\\\\?\\\\?&quot;, year, res)\n}\nres &lt;- gsub(&quot;span&gt; &quot;, &quot;span&gt;&quot;, res)\nres\n}\n\n## Here&#39;s an example\n# mycitep(&quot;https://github.com/lcolladotor/lcollado753&quot;, &quot;Collado, 2013&quot;)\nwrite.bibtex(c(&quot;knitcitations&quot; = citation(&quot;knitcitations&quot;)), file = &quot;pkgs.bib&quot;)\nbib &lt;- read.bibtex(&quot;pkgs.bib&quot;)\n\n\nStart post\n\nReferences\n\nCitations made with knitcitations r mycitep(bib[[&quot;knitcitations&quot;]], &quot;Boettiger, 2013&quot;).\n\n## Print bibliography\nbibliography()\n\n\nReproducibility\n\nsessionInfo()\n\n",
        "link": "/zdravie/2015/03/22/Testovanie.html",
        "date": "2015-03-22 00:00:00 +0100",
        "excerpt": "",
        "seach_omit": ""
    }
    
    

    
    ,{
        "title": "PHP for winners",
        "content": "You’ll find this php in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.\n\nTo add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.\n\nJekyll also offers powerful support for code snippets:\n\ndef print_hi(name)\n  puts &quot;Hi, #{name}&quot;\nend\nprint_hi(&#39;Tom&#39;)\n#=&gt; prints &#39;Hi, Tom&#39; to STDOUT.\n\nCheck out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll’s dedicated Help repository.\n",
        "link": "/psychika/2014/11/11/php-for-winners.html",
        "date": "2014-11-11 16:34:28 +0100",
        "excerpt": "",
        "seach_omit": ""
    }
    
    

    
    ,{
        "title": "Node.js is slow - what gives?",
        "content": "You’ll find this post in your _posts directory. Go ahead and edit it and\nre-build the site to see your changes. You can rebuild the site in many\ndifferent ways, but the most common way is to run jekyll serve, which\nlaunches a web server and auto-regenerates your site when a file is\nupdated.\n\nTo add new posts, simply add a file in the _posts directory that follows\nthe convention YYYY-MM-DD-name-of-post.ext and includes the necessary\nfront matter. Take a look at the source for this post to get an idea about\nhow it works.\n\nJekyll also offers powerful support for code snippets:\n\ndef print_hi(name) puts &quot;Hi, #{name}&quot; end\nprint_hi(&#39;Tom&#39;) #=&gt; prints &#39;Hi, Tom&#39; to STDOUT.\n\nCheck out the Jekyll docs for more info on how to get the most\nout of Jekyll. File all bugs/feature requests at Jekyll’s GitHub\nrepo. If you have questions, you can ask them on Jekyll’s\ndedicated Help repository.\n\n\nSeve\nJuh\n\n\nHeader 1\n\nHeader 2\n\nHeader 3\n\nThis is not a code span!\n",
        "link": "/ezoterika/2014/11/11/node-js-is-slow-what-gives.html",
        "date": "2014-11-11 16:34:28 +0100",
        "excerpt": "",
        "seach_omit": ""
    }
    
    

    
    ,{
        "title": "LOL at CSS",
        "content": "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.\n\nTo add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.\n\nJekyll also offers powerful support for code snippets:\n\ndef print_hi(name)\n  puts &quot;Hi, #{name}&quot;\nend\nprint_hi(&#39;Tom&#39;)\n#=&gt; prints &#39;Hi, Tom&#39; to STDOUT.\n\nCheck out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll’s dedicated Help repository.\n",
        "link": "/linux/2014/11/11/lol-at-css.html",
        "date": "2014-11-11 16:34:28 +0100",
        "excerpt": "",
        "seach_omit": ""
    }
    
    

    
    ,{
        "title": "Intro to PHP",
        "content": "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.\n\nTo add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.\n\nJekyll also offers powerful support for code snippets:\n\ndef print_hi(name)\n  puts &quot;Hi, #{name}&quot;\nend\nprint_hi(&#39;Tom&#39;)\n#=&gt; prints &#39;Hi, Tom&#39; to STDOUT.\n\nCheck out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll’s dedicated Help repository.\n",
        "link": "/vzdelavanie/2014/11/11/intro-to-php.html",
        "date": "2014-11-11 16:34:28 +0100",
        "excerpt": "",
        "seach_omit": ""
    }
    
    

    
    ,{
        "title": "HTML - how to meet Llamas",
        "content": "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.\n\nTo add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.\n\nJekyll also offers powerful support for code snippets:\n\ndef print_hi(name)\n  puts &quot;Hi, #{name}&quot;\nend\nprint_hi(&#39;Tom&#39;)\n#=&gt; prints &#39;Hi, Tom&#39; to STDOUT.\n\nCheck out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll’s dedicated Help repository.\n",
        "link": "/zdravie/2014/11/11/html-how-to-meet-llamas.html",
        "date": "2014-11-11 16:34:28 +0100",
        "excerpt": "",
        "seach_omit": ""
    }
    
    

    
    ,{
        "title": "Advanced Node.js",
        "content": "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.\n\nTo add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.\n\nJekyll also offers powerful support for code snippets:\n\ndef print_hi(name)\n  puts &quot;Hi, #{name}&quot;\nend\nprint_hi(&#39;Tom&#39;)\n#=&gt; prints &#39;Hi, Tom&#39; to STDOUT.\n\nCheck out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll’s dedicated Help repository.\n",
        "link": "/linux/2014/11/11/advanced-node-js.html",
        "date": "2014-11-11 16:34:28 +0100",
        "excerpt": "",
        "seach_omit": ""
    }
    
    

    
    ,{
        "title": "33 things you wouldn't believe about CSS",
        "content": "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.\n\nTo add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.\n\nnovy čiara offers powerful support for code snippets:\n\ndef print_hi(name)\n  puts &quot;Hi, #{name}&quot;\nend\nprint_hi(&#39;Tom&#39;)\n#=&gt; prints &#39;Hi, Tom&#39; to STDOUT.\n\nCheck out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll’s dedicated Help repository.\n\ndef new(I):\n    return(I)\nprint(I)\n\n\nThis⋅para⋅line⋅starts⋅at⋅the⋅first⋅column.⋅However,\n⋅⋅⋅⋅⋅⋅the⋅following⋅lines⋅can⋅be⋅indented⋅any⋅number⋅of⋅spaces/tabs.\n⋅⋅⋅The⋅para⋅continues⋅here.\n\n⋅⋅This⋅is⋅another⋅paragraph,⋅not⋅connected⋅to⋅the⋅above⋅one.⋅But⋅⋅\nwith⋅a⋅hard⋅line⋅break.⋅\\\nAnd⋅another⋅one.\n",
        "link": "/jekyll/update/2014/11/11/33-things-you-wouldnt-believe-about-css.html",
        "date": "2014-11-11 16:34:28 +0100",
        "excerpt": "",
        "seach_omit": ""
    }
    
    

    
    ,{
        "title": "You're up and running!",
        "content": "Skuska nazvu a jeho farby\n\n\n\nThe easiest way to make your first post is to edit this one. Go into /_posts/ and update the Hello World markdown file. For more instructions head over to the Jekyll Now repository on GitHub.\n",
        "link": "/vzdelavanie/2014/03/03/Hello-World.html",
        "date": "2014-03-03 00:00:00 +0100",
        "excerpt": "",
        "seach_omit": ""
    }
    
    



    
    ,{
        "title": "About",
        "content": "This is the base Jekyll theme. You can find out more info about customizing your Jekyll theme, as well as basic Jekyll usage documentation at jekyllrb.com\n\nYou can find the source code for the Jekyll new theme at: github.com/jglovier/jekyll-new\n\nYou can find the source code for Jekyll at github.com/jekyll/jekyll\n",
        "link": "/about.html",
        "date": null,
        "excerpt": null,
        "seach_omit": ""
    }
    
    

    

    

    

    

    

    

    
    ,{
        "title": "Search",
        "content": "      \n      \n         result(s) found for &ldquo;&rdquo;.\n      \n      \n\n        \n            \n        \n\n        \n        \n        \n\n\n        \n\n      \n      \n\n      \n      \n\n      \n      \n\n",
        "link": "/search/",
        "date": null,
        "excerpt": null,
        "seach_omit": ""
    }
    
    

    

    

]